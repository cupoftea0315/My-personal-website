my_data <- data.frame(
Name = c("Alice", "Bob", "Charlie"),
Age = c(25, 32, 42),
City = c("New York", "San Francisco", "Los Angeles")
)
knitr::kable(my_data)
A <- matrix(c(1, 2, 3, 4), nrow = 2)
B <- matrix(c(5, 6, 7, 8), nrow = 2)
kronecker(A, B) # R中计算外积的函数
A <- matrix(c(1, 2, 3, 4), nrow = 2)
B <- matrix(c(5, 6, 7, 8), nrow = 2)
A %*% B
A * B
A %o% B # R中计算外积的函数
A %o% B # R中计算外积的函数
A %*% B
A * B
A <- matrix(c(1, 2, 3, 4), nrow = 2)
B <- matrix(c(5, 6, 7, 8), nrow = 2)
A %o% B # R中计算外积的函数
A %*% B
A * B
kronecker(A, B, FUN ="*")
A %o% B
A %o% B
kronecker(A, B, FUN ="*")
A %o% B
gene_length <- c(1000 ,2000 ,3000) # 基因长度向量（千）
reads_count <- matrix(c(10 ,20 ,30 ,40 ,50 ,60), nrow =-3) # 基因reads数矩阵（百万）
rpkm <- (reads_count / gene_length) %o% (1 / colSums(reads_count)) # 计算RPKM（外积）
rpkm
gene_length <- c(1000 ,2000 ,3000) # 基因长度向量（千）
reads_count <- matrix(c(10 ,20 ,30 ,40 ,50 ,60), nrow =-3) # 基因reads数矩阵（百万）
rpkm <- (reads_count / gene_length) %o% (1 / colSums(reads_count)) # 计算RPKM（外积）
reads_count <- matrix(c(10 ,20 ,30 ,40 ,50 ,60), nrow =-3) # 基因reads数矩阵（百万）
reads_count <- matrix(c(10 ,20 ,30 ,40 ,50 ,60), nrow =3) # 基因reads数矩阵（百万）
rpkm <- (reads_count / gene_length) %o% (1 / colSums(reads_count)) # 计算RPKM（外积）
rpkm
reads_count
rpkm
sum((reads_count / gene_length) * (1 / colSums(reads_count)))
setwd("D:/.Rstudio_workpanel(Default)")
source("~/.active-rstudio-document", echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
# Use a matrix to store the information about layout
mymat <- matrix(1:6, nrow = 2)
layout(mymat)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
# Also, customize the exact layout by using some parameters like 'widths=' and 'heights=' by filling vector
mymat <- matrix(c(1, 1:5), nrow = 2)
mymat  # Check the matrix which was used to layout plots
layout(mymat, widths = c(1, 1, 2), heights = c(1, 2))
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
# This is an example from quiz1. Also, please check the exercises to view more difficult questions
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
mymat  # Check the matrix which was used to layout plots
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length,iris$Sepal.Width,pch=20,xlab='Sepal Length (cm)',ylab='Sepal Width (cm)',las=1)
boxplot(iris$Sepal.Length,horizontal=T)
boxplot(iris$Sepal.Width,las=2)
library(ggplot2)
mymat <- matrix(c(1:4), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
ggplot(iris) + geom_point(aes(iris$Sepal.Length, iris$Sepal.Width)) + xlab('Sepal Length (cm)') + ylab('Sepal Width (cm)')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Length)) + xlab('')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Width)) + xlab('')
library(ggplot2)
mymat <- matrix(c(1:4), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
ggplot(iris) + geom_point(aes(iris$Sepal.Length, iris$Sepal.Width)) + xlab('Sepal Length (cm)') + ylab('Sepal Width (cm)')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Length)) + xlab('')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Width)) + xlab('')
library(ggplot2)
mymat <- matrix(c(1:4), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
ggplot(iris) + geom_point(aes(iris$Sepal.Length, iris$Sepal.Width)) + xlab('Sepal Length (cm)') + ylab('Sepal Width (cm)')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Length)) + xlab('')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Width)) + xlab('')
library(ggplot2)
mymat <- matrix(c(1:4), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
ggplot(iris) + geom_point(aes(iris$Sepal.Length, iris$Sepal.Width)) + xlab('Sepal Length (cm)') + ylab('Sepal Width (cm)')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Length)) + xlab('') + coord_flip()
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Width)) + xlab('')
library(ggplot2)
mymat <- matrix(c(1:4), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
ggplot(iris) + geom_point(aes(iris$Sepal.Length, iris$Sepal.Width)) + xlab('Sepal Length (cm)') + ylab('Sepal Width (cm)')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Width)) + xlab('')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Length)) + xlab('') + coord_flip()
library(ggplot2)
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
ggplot(iris) + geom_point(aes(iris$Sepal.Length, iris$Sepal.Width)) + xlab('Sepal Length (cm)') + ylab('Sepal Width (cm)')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Width)) + xlab('')
ggplot(iris) + geom_boxplot(aes(iris$Sepal.Length)) + xlab('') + coord_flip()
# Use a matrix to store the information about layout
mymat <- matrix(1:6, nrow = 2)
layout(mymat)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
# Also, customize the exact layout by using some parameters like 'widths=' and 'heights=' by filling vector
mymat <- matrix(c(1, 1:5), nrow = 2)
mymat  # Check the matrix which was used to layout plots
layout(mymat, widths = c(1, 1, 2), heights = c(1, 2))
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
# This is an example from quiz1. Also, please check the exercises to view more difficult questions
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
mymat  # Check the matrix which was used to layout plots
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length,iris$Sepal.Width,pch=20,xlab='Sepal Length (cm)',ylab='Sepal Width (cm)',las=1)
boxplot(iris$Sepal.Length,horizontal=T, pch=20)
boxplot(iris$Sepal.Width,las=2, pch=20)
boxplot(iris$Sepal.Length, pch=20, las=1)
# Use a matrix to store the information about layout
mymat <- matrix(1:6, nrow = 2)
layout(mymat)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
# Also, customize the exact layout by using some parameters like 'widths=' and 'heights=' by filling vector
mymat <- matrix(c(1, 1:5), nrow = 2)
mymat  # Check the matrix which was used to layout plots
layout(mymat, widths = c(1, 1, 2), heights = c(1, 2))
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
barplot(airquality$Month)
plot(airquality$Solar.R, airquality$Ozone)
hist(airquality$Solar.R)
# This is an example from quiz1. Also, please check the exercises to view more difficult questions
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
mymat  # Check the matrix which was used to layout plots
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
boxplot(iris$Sepal.Width, pch=20, las=2)
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
boxplot(iris$Sepal.Width, pch=20, las=2)
library(latex2exp)
plot(1:10, 1:10, pch = 16, las = 1,
xlab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'))
text(850, 30, expression(prod(plain(P)(X == x), x)))
library(latex2exp)
plot(1:100, 1:100, pch = 16, las = 1,
xlab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'),
ylab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'))
text(850, 30, expression(prod(plain(P)(X == x), x)))
library(latex2exp)
plot(1:10, 1:10, pch = 16, las = 1,
xlab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'),
ylab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'))
text(850, 30, expression(prod(plain(P)(X == x), x)))
library(latex2exp)
plot(1:10, 1:10, pch = 16, las = 1,
xlab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'),
ylab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'))
library(latex2exp)
plot(1:10, 1:10, pch = 16, las = 1,
xlab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'),
ylab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'))
library(latex2exp)
plot(1:10, 1:10, pch = 16, las = 1,
xlab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'),
ylab = TeX('NH$_3$ ($\\mu$mol m$^{-3}$)'))
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
boxplot(iris$Sepal.Width, pch=20, las=2)
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
boxplot(iris$Sepal.Width, pch=20, las=2)
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
boxplot(iris$Sepal.Width, pch=20, las=2)
mymat <- matrix(c(1, 2, 3, 0), nrow = 2)
layout(mymat, widths = c(4, 1), heights = c(2, 1))
plot(iris$Sepal.Length, iris$Sepal.Width, pch=20, xlab='Sepal Length (cm)', ylab='Sepal Width (cm)', las=1)
boxplot(iris$Sepal.Length, pch=20, las=1, horizontal=T)
boxplot(iris$Sepal.Width, pch=20, las=2)
boxplot(airquality$Ozone)
boxplot(airquality$Ozone)
boxplot(airquality$Ozone)
library(openair)
library(tidyverse)
# create a function
sum_of_na <- function(x){
sum(is.na(x))
}
mydata %>% summarise(
across(everything(), sum_of_na)
)
# install.packages("devtools")
devtools::install_github("r-lib/conflicted")
library(openair)
library(tidyverse)
# create a function
sum_of_na <- function(x){
sum(is.na(x))
}
mydata %>% summarise(
across(everything(), sum_of_na)
)
library(openair)
library(tidyverse)
# create a function
sum_of_na <- function(x){
sum(is.na(x))
}
mydata %>% summarise(
across(everything(), sum_of_na)
)
mydata <- mydata %>% mutate(month = format(date, '%B'))
head(mydata)
# 1998-01-01 00:00:00	0.60	280	285	39	1	29	4.7225	3.3725	NA	285	39	1	29	4.7225	3.3725	NA	883612800 January
# 1998-01-01 01:00:00	2.16	230	NA	NA	NA	37	NA	NA	NA	NA	NA	NA	37	NA	NA	NA	883616400	January
# 1998-01-01 02:00:00	2.76	190	NA	NA	3	34	6.8300	9.6025	NA	NA	NA	3	34	6.8300	9.6025	NA	883620000	January
# 1998-01-01 03:00:00	2.16	170	493	52	3	35	7.6625	10.2175	NA	493	52	3	35	7.6625	10.2175	NA	883623600	January
# 1998-01-01 04:00:00	2.40	180	468	78	2	34	8.0700	8.9125	NA	468	78	2	34	8.0700	8.9125	NA	883627200	January
# 1998-01-01 05:00:00	3.00	190	264	42	0	16	5.5050	3.0525	NA  264	42	0	16	5.5050	3.0525	NA	883630800	January
Sys.setlocale("LC_TIME", "English")  # Just used to change the language
mydata <- mydata %>% mutate(month = format(date, '%B'))
head(mydata)
mydata <- mydata %>% mutate(month = format(date, '%B'))
head(mydata)
# The first weekday for observation is Thursday
# The last weekday for observation is Thursday
sprintf('The first weekday for observation is %s', format(min(mydata$date), '%A'))
sprintf('The last weekday for observation is %s', format(max(mydata$date), '%A'))
# The first weekday for observation is Thursday
# The last weekday for observation is Thursday
sprintf('The first weekday for observation is %s', format(min(mydata$date), '%A'))
sprintf('The last weekday for observation is %s', format(max(mydata$date), '%A'))
# Load the package
library(tidyverse)
# Check the members of them
tidyverse_packages()
# Load the package
library(tidyverse)
# Check the members of them
tidyverse_packages()
# Load the package
library(tidyverse)
# Check the members of them
tidyverse_packages()
setwd("D:/.My website/ENV222 exercise")
